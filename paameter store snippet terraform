provider "aws" {
  region = "us-east-1"  # Change to your desired AWS region
}

# Create a parameter in AWS Systems Manager Parameter Store
resource "aws_ssm_parameter" "example" {
  name  = "/myapp/secrets/my_secret"
  type  = "SecureString"
  value = "supersecretvalue"
}

# Define an IAM policy for the Lambda function
data "aws_iam_policy_document" "lambda_policy" {
  statement {
    actions   = ["ssm:GetParameters"]
    resources = [aws_ssm_parameter.example.arn]
  }
}

# Create an IAM role for the Lambda function
resource "aws_iam_role" "lambda_role" {
  name = "lambda_role"
  
  assume_role_policy = data.aws_iam_policy_document.lambda_policy.json
}

# Attach the Lambda execution role to the IAM policy
resource "aws_iam_policy_attachment" "lambda_policy_attachment" {
  policy_arn = aws_iam_policy.lambda_policy.arn
  roles      = [aws_iam_role.lambda_role.name]
}

# Create the Lambda function
resource "aws_lambda_function" "example" {
  filename         = "lambda_function.zip"
  function_name    = "example_lambda"
  role             = aws_iam_role.lambda_role.arn
  handler          = "index.handler"
  source_code_hash = filebase64sha256("lambda_function.zip")

  environment {
    variables = {
      MY_SECRET_PARAMETER_NAME = aws_ssm_parameter.example.name
    }
  }
}

# Grant the Lambda function permission to execute
resource "aws_lambda_permission" "example" {
  statement_id  = "AllowExecutionFromS3"
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.example.function_name
  principal     = "s3.amazonaws.com"
}

# Zip and upload your Lambda function code (lambda_function.zip)
# Deploy your Lambda function using "aws_lambda_function.example"
